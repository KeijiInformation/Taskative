import { Time } from "../../../Class";
import { useContext } from "react";
import "../../../styles/Components/main/TimeInput.scss";
import { UserDataContext } from "../../../App";



interface Props {
    handleSetTime: (event: React.ChangeEvent<HTMLInputElement>) => void;
    timeData: Time;
}


export default function TimeInput(props: Props) {
    //////////////////////////////////////////////////////////////////////////////
    // global
    //////////////////////////////////////////////////////////////////////////////
    const userData = useContext(UserDataContext);
    //////////////////////////////////////////////////////////////////////////////
    //////////////////////////////////////////////////////////////////////////////
    //////////////////////////////////////////////////////////////////////////////






    //////////////////////////////////////////////////////////////////////////////
    // render
    //////////////////////////////////////////////////////////////////////////////
    return (
        <div className="time-input-wrapper">
            {props.timeData.isSet()
            ?
                <input className="time-input-wrapper__input" type="time" step={userData.config.timeStep*60} value={`${props.timeData.getHoursStr()}:${props.timeData.getMinStr()}`} onChange={(event) => props.handleSetTime(event)}/>
            :
                <input className="time-input-wrapper__input" type="time" step={userData.config.timeStep*60} onChange={(event) => props.handleSetTime(event)}/>
            }
        </div>
    )
    //////////////////////////////////////////////////////////////////////////////
    //////////////////////////////////////////////////////////////////////////////
    //////////////////////////////////////////////////////////////////////////////
}